/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.1
 * Generated at: 2024-07-05 08:29:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import jstlboard.*;

public final class update_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("jstlboard");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write(" <style>\r\n");
      out.write("   #title {\r\n");
      out.write("     width:500px;\r\n");
      out.write("     height:30px;\r\n");
      out.write("     border:1px solid green;\r\n");
      out.write("     outline:none;\r\n");
      out.write("   }\r\n");
      out.write("   #title:focus ,#name:focus, #pwd:focus, #content:focus {\r\n");
      out.write("     border-color:red;\r\n");
      out.write("   }\r\n");
      out.write("   #name {\r\n");
      out.write("     width:150px;\r\n");
      out.write("     height:30px;\r\n");
      out.write("     border:1px solid green;\r\n");
      out.write("     outline:none;\r\n");
      out.write("   }\r\n");
      out.write("   #pwd {\r\n");
      out.write("     width:150px;\r\n");
      out.write("     height:30px;\r\n");
      out.write("     border:1px solid green;\r\n");
      out.write("     outline:none;\r\n");
      out.write("   }\r\n");
      out.write("   #content {\r\n");
      out.write("     width:500px;\r\n");
      out.write("     height:200px;\r\n");
      out.write("     border:1px solid green;\r\n");
      out.write("     outline:none;\r\n");
      out.write("   }\r\n");
      out.write("   #submit {\r\n");
      out.write("     width:200px;\r\n");
      out.write("     height:35px;\r\n");
      out.write("     background:white;\r\n");
      out.write("     border:1px solid green;\r\n");
      out.write("     outline:none;\r\n");
      out.write("     cursor:pointer;\r\n");
      out.write("   }\r\n");
      out.write("   table {\r\n");
      out.write("     border-spacing:0px;\r\n");
      out.write("   }\r\n");
      out.write("   table td {\r\n");
      out.write("     border-bottom:1px solid black;\r\n");
      out.write("     padding:5px;\r\n");
      out.write("     height:50px;\r\n");
      out.write("   }\r\n");
      out.write("   table tr:first-child td {\r\n");
      out.write("     border-top:2px solid black;\r\n");
      out.write("   }\r\n");
      out.write("   table tr:last-child td {\r\n");
      out.write("     border-bottom:2px solid black;\r\n");
      out.write("   }\r\n");
      out.write(" </style>\r\n");
      out.write(" <script>\r\n");
      out.write("   ");

     if(request.getParameter("err")!=null)
     {
   
      out.write("\r\n");
      out.write("      //alert(\"비밀번호 오류\");\r\n");
      out.write("   ");

     }
   
      out.write("\r\n");
      out.write(" </script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");

    // DB연결
    Board board=new Board();
	board.update(request);
    // 수정할 레코드 하나를 읽어온다..

      out.write("\r\n");
      out.write("<body> <!-- update.jsp -->\r\n");
      out.write(" <form method=\"post\" action=\"updateOk.jsp\">\r\n");
      out.write("  <input type=\"hidden\" name=\"id\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("  <input type=\"hidden\" name=\"page\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${page}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("  <table width=\"700\" align=\"center\">\r\n");
      out.write("    <caption> <h3> 게시판 글수정 </h3></caption>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td> 제 목 </td>\r\n");
      out.write("      <td> <input type=\"text\" name=\"title\" id=\"title\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"> </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td> 작성자 </td>\r\n");
      out.write("      <td> <input type=\"text\" name=\"name\" id=\"name\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"> </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("    \r\n");
      out.write("      <td> 비밀번호 </td>\r\n");
      out.write("      <td> <input type=\"password\" name=\"pwd\" id=\"pwd\">\r\n");
      out.write("       ");

         if(request.getParameter("err")!=null)
         {
       
      out.write("\r\n");
      out.write("          <span style=\"font-size:12px;color:red\">비밀번호 오류</span>\r\n");
      out.write("       ");

         }
       
      out.write("\r\n");
      out.write("         \r\n");
      out.write("       </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td> 내 용 </td>\r\n");
      out.write("      <td> <textarea name=\"content\" id=\"content\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea> </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr align=\"center\">\r\n");
      out.write("      <td colspan=\"2\"> <input type=\"submit\" value=\"글수정\" id=\"submit\"> </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("  </table>\r\n");
      out.write(" </form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");

	board.close();

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
