/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.1
 * Generated at: 2024-05-20 08:36:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class css_005flayer_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write(" \r\n");
      out.write("  #aa{\r\n");
      out.write("  \twidth:100px;\r\n");
      out.write("  \theight:100px;\r\n");
      out.write("  \tbackground:red; /*background가 생략되면 투명으로 설정되어서 뒤에 배경과 겹쳐서 보인다.*/\r\n");
      out.write("  \tposition:absolute; /*layer로(absolute, fixed) 하느냐 그냥 웹페이지의 부분(relative)으로 하느냐 */\r\n");
      out.write(" \tleft:300px;\r\n");
      out.write(" \ttop:100px;\r\n");
      out.write(" \tvisibility:visible; /*javascript를 통해서 속성을 변화시켜서 동작을 한다*/\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body> <!-- css_layer.jsp -->\r\n");
      out.write("<!-- \r\n");
      out.write(" \tlayer : 계층\r\n");
      out.write(" \t* 웹페이지내에서 계층이 다른 영역을 만들어서 정보를 전달 (책: 포스트잇)\r\n");
      out.write(" \t* css의 속성을 통해서 만든다\r\n");
      out.write(" \tposition : layer의 위치 관련 \r\n");
      out.write(" \tleft : layer를 위치시킬 좌표x\r\n");
      out.write(" \ttop: layer를 위치시킬 좌표 y\r\n");
      out.write(" \twidth: layer의 가로크기\r\n");
      out.write(" \theight: layer의 세로크기 \r\n");
      out.write(" \tvisibility : layer의 숨김, 보이기\r\n");
      out.write(" \tz-index : 계층간의 쌓은 순서(가장 높은값이 가장 높은곳으로)\r\n");
      out.write(" -->\r\n");
      out.write(" \r\n");
      out.write("    <div id=\"aa\"> 여기는 레이어 </div>\r\n");
      out.write("    \r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write(" \t학교종이 땡땡땡 어서모이자 오늘은 금요일 하하하!!! 저녁에는 삼결살에 소주한잔!! <p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
